Sun Sep 03 2023 1:0:6 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ Forbidden
Sun Sep 03 2023 1:1:27 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ Forbidden
Sun Sep 03 2023 1:3:27 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ jwt malformed
Sun Sep 03 2023 1:3:39 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ jwt malformed
Sun Sep 03 2023 1:4:17 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ jwt malformed
Sun Sep 03 2023 1:9:0 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ User Already exits 
Sun Sep 03 2023 1:47:15 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ [
  {
    "expected": "'customer' | 'admin'",
    "received": "undefined",
    "code": "invalid_type",
    "path": [
      "body",
      "role"
    ],
    "message": "Required"
  }
]
Sun Sep 03 2023 1:47:39 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ 
Invalid `prisma.user.update()` invocation in
D:\next level\postgreSql\prisma-books-server\src\app\modules\user\user.service.ts:97:36

  94   genarateBycryptPass = await createBycryptPassword(password);
  95 }
  96 
→ 97 const result = await prisma.user.update({
       where: {
         id: "d8fab0bb-f780-4bc5-93d9-7ec39c8ade2e"
       },
       data: {
         named: "updated2",
         ~~~~~
     ?   id?: String | StringFieldUpdateOperationsInput,
     ?   name?: String | StringFieldUpdateOperationsInput,
     ?   email?: String | StringFieldUpdateOperationsInput,
     ?   password?: String | StringFieldUpdateOperationsInput,
     ?   role?: UserRole | EnumUserRoleFieldUpdateOperationsInput,
     ?   contactNo?: String | StringFieldUpdateOperationsInput,
     ?   address?: String | StringFieldUpdateOperationsInput,
     ?   profileImg?: String | StringFieldUpdateOperationsInput,
     ?   ReviewAndRatings?: ReviewAndRatingUpdateManyWithoutUserNestedInput,
     ?   Order?: OrderUpdateManyWithoutUserNestedInput
       }
     })

Unknown argument `named`. Did you mean `name`? Available options are listed in green.
Sun Sep 03 2023 1:55:1 } [PH] error: 🐱‍🏍 globalErrorHandler ~~ 
Invalid `prisma.category.findMany()` invocation in
D:\next level\postgreSql\prisma-books-server\src\app\modules\category\category.service.ts:49:48

  46 const whereConditions: Prisma.CategoryWhereInput =
  47   andCondition.length > 0 ? { AND: andCondition } : {};
  48         
→ 49 const result = await prisma.category.findMany({
       where: {},
       skip: 0,
       take: 10,
       orderBy: {
         createdAt: "desc",
         ~~~~~~~~~
     ?   id?: SortOrder,
     ?   title?: SortOrder,
     ?   Books?: BookOrderByRelationAggregateInput
       }
     })

Unknown argument `createdAt`. Available options are listed in green.
